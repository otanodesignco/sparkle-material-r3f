/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import MeshSparkleMaterial from './meshSparkleMaterial'
import { useControls } from 'leva'
import { useFrame } from '@react-three/fiber'

export function Skag(props) 
{
  const { nodes } = useGLTF('./skag.glb')

  const self = useRef()

  const { sparkleScale, sparkleIntensity, baseColor, fresnelColor,sparkleColor, fresnelAmt, fresnelAlpha, fresnelIntensity } = useControls({
    sparkleScale:
    {
        value: 10,
        min: 1,
        max: 100,
        step: 0.001
    }, sparkleIntensity:
    {
        value: 30,
        min: 0.001,
        max: 300,
        step: 0.001
    }, baseColor:
    {
        value: '#2a2a2a'
    }, fresnelColor:
    {
        value: '#e1c564'
    }, sparkleColor:
    {
        value: '#e1c564'
    }, fresnelAmt:
    {
        value: 10,
        min: 0,
        max: 20,
        step: 0.001
    }, fresnelAlpha:
    {
        value: 0.25,
        min: 0,
        max: 1,
        step: 0.001
    }, fresnelIntensity:
    {
        value: 5,
        min: 1,
        max: 20,
        step: 0.001
    }
    })

    useFrame((state, delta) =>
    {

    })

  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.Object_2.geometry}
        rotation={[-Math.PI / 2, 0, 0]}
        ref={self}
      >
        <MeshSparkleMaterial
            texture='./images/noise-voronoi.png'
            sparkleIntensity={sparkleIntensity}
            sparkleScale={sparkleScale}
            baseColor={baseColor}
            fresnelColor={fresnelColor}
            sparkleColor={ sparkleColor }
            fresenlAmt={fresnelAmt}
            fresnelAlpha={fresnelAlpha}
            fresnelIntensity={fresnelIntensity}
        />
    </mesh>
    </group>
  )
}

useGLTF.preload('./skag.glb')